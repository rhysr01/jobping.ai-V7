name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run type checking
      run: npm run type-check
      
    - name: Run linting
      run: npm run lint
      
    - name: Run unit tests
      run: npm run test:unit
      env:
        NODE_ENV: test
        MATCH_USERS_DISABLE_AI: true
        BYPASS_RESERVATION: 1
        
    - name: Run integration tests
      run: npm run test:integration
      env:
        NODE_ENV: test
        MATCH_USERS_DISABLE_AI: true
        BYPASS_RESERVATION: 1
        
    - name: Run API tests
      run: npm run test:api
      env:
        NODE_ENV: test
        MATCH_USERS_DISABLE_AI: true
        BYPASS_RESERVATION: 1
        
    - name: Run tests with coverage
      run: npm run test:coverage
      env:
        NODE_ENV: test
        MATCH_USERS_DISABLE_AI: true
        BYPASS_RESERVATION: 1
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Comment coverage on PR
      uses: romeovs/lcov-reporter-action@v0.3.1
      if: github.event_name == 'pull_request'
      with:
        lcov-file: ./coverage/lcov.info
        github-token: ${{ secrets.GITHUB_TOKEN }}
        delete-old-comments: true

  performance:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run performance tests
      run: npm run test:performance
      env:
        NODE_ENV: test
        MATCH_USERS_DISABLE_AI: true
        BYPASS_RESERVATION: 1
      timeout-minutes: 10

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Check build output
      run: |
        if [ -d ".next" ]; then
          echo "✅ Build successful"
        else
          echo "❌ Build failed"
          exit 1
        fi
