name: Automated Job Scraping

on:
  schedule:
    # Run every 4 hours
    - cron: '0 */4 * * *'
  
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      scrapers:
        description: 'Scrapers to run (comma-separated: adzuna, jobspy, reed, orchestrator)'
        required: false
        default: 'orchestrator'
        type: string
      city:
        description: 'City for location-specific scraping'
        required: false
        default: ''
        type: string
      cleanup_only:
        description: 'Run cleanup only'
        required: false
        default: false
        type: boolean

concurrency:
  group: scrape
  cancel-in-progress: true

jobs:
  scrape:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup Python 3.11 (for JobSpy)
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Python deps (JobSpy)
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r scripts/python-requirements.txt
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run scraping
      env:
        # Database (use existing secret for now)
        NEXT_PUBLIC_SUPABASE_URL: https://kpecjbjtdjzgkzywylhn.supabase.co
        SUPABASE_URL: https://kpecfrvtbgnjbjtdjzgkzywylhn.supabase.co
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        
        # API Keys
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ADZUNA_APP_ID: ${{ secrets.ADZUNA_APP_ID }}
        ADZUNA_APP_KEY: ${{ secrets.ADZUNA_APP_KEY }}
        REED_API_KEY: ${{ secrets.REED_API_KEY }}
        MUSE_API_KEY: ${{ secrets.MUSE_API_KEY }}
        GREENHOUSE_API_KEY: ${{ secrets.GREENHOUSE_API_KEY }}
        RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
        JOBPING_API_KEY: ${{ secrets.JOBPING_API_KEY }}
        
        # Environment
        NODE_ENV: production
        JOBPING_PRODUCTION_MODE: 'true'
        CITY: ${{ github.event.inputs.city }}
        # Tell your Node script which interpreter to use
        PYTHON: python
      run: |
        echo "üöÄ Starting JobPing scraping..."
        SCRAPERS_INPUT="${{ github.event.inputs.scrapers }}"
        if [ -z "$SCRAPERS_INPUT" ] || [ "$SCRAPERS_INPUT" = "orchestrator" ]; then
          echo "‚ñ∂Ô∏è Running streamlined orchestrator (4 core scrapers)"
          node automation/real-job-runner.cjs --single-run
        else
          IFS=',' read -ra NAMES <<< "$SCRAPERS_INPUT"
          for s in "${NAMES[@]}"; do
            case "$s" in
              adzuna)
                echo "‚ñ∂Ô∏è Running Adzuna wrapper (CITY=$CITY)"
                if [ -n "$CITY" ]; then CITY="$CITY" node scrapers/wrappers/adzuna-wrapper.cjs; else node scrapers/wrappers/adzuna-wrapper.cjs; fi
                ;;
              jobspy)
                echo "‚ñ∂Ô∏è Running JobSpy wrapper"
                node scrapers/wrappers/jobspy-wrapper.cjs
                ;;
              reed)
                echo "‚ñ∂Ô∏è Running Reed wrapper"
                node scrapers/wrappers/reed-wrapper.cjs
                ;;
              *)
                echo "‚ùì Unknown scraper: $s (supported: adzuna, jobspy, reed, orchestrator)"
                ;;
            esac
          done
        fi

  # Optional: Add a job to run cleanup more frequently
  cleanup:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' # Only run on schedule, not manual
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run cleanup
      env:
        NEXT_PUBLIC_SUPABASE_URL: https://kpecjbjtdjzgkzywylhn.supabase.co
        SUPABASE_URL: https://kpecjbjtdjzgkzywylhn.supabase.co
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        NODE_ENV: production
      run: |
        echo "üîç Preflight checks..."
        if [ -z "$SUPABASE_URL" ]; then
          echo "‚ùå SUPABASE_URL is not set"
          exit 1
        fi
        if [ -z "$SUPABASE_SERVICE_ROLE_KEY" ]; then
          echo "‚ùå SUPABASE_SERVICE_ROLE_KEY is not set"
          exit 1
        fi
        echo "‚úÖ Environment variables validated"
        echo "üßπ Starting cleanup..."
        node scripts/cleanup-jobs.js
