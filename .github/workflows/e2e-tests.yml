name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.project }}

      - name: Setup environment variables
        run: |
          echo "ENABLE_TEST_ENDPOINTS=true" >> $GITHUB_ENV
          echo "NODE_ENV=test" >> $GITHUB_ENV

      - name: Run E2E tests
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_STRIPE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
        run: npm run test:e2e -- --project=${{ matrix.project }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.project }}
          path: playwright-report/
          retention-days: 30

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-results-${{ matrix.project }}
          path: test-results/
          retention-days: 7

  mobile-test:
    timeout-minutes: 45
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium webkit

      - name: Setup environment variables
        run: |
          echo "ENABLE_TEST_ENDPOINTS=true" >> $GITHUB_ENV
          echo "NODE_ENV=test" >> $GITHUB_ENV

      - name: Run Mobile Chrome tests
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npm run test:e2e -- --project="Mobile Chrome"

      - name: Run Mobile Safari tests
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: npm run test:e2e -- --project="Mobile Safari"

      - name: Upload mobile test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-mobile
          path: playwright-report/
          retention-days: 30

  accessibility:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Run accessibility tests
        run: npm run test:a11y

      - name: Upload a11y results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: a11y-report
          path: playwright-report/
          retention-days: 30

  performance:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build production bundle
        run: npm run build

      - name: Run Lighthouse CI
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: npm run perf

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-report
          path: .lighthouseci/
          retention-days: 30

  notify:
    needs: [test, mobile-test, accessibility, performance]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check test status
        run: |
          if [ "${{ needs.test.result }}" == "failure" ] || \
             [ "${{ needs.mobile-test.result }}" == "failure" ] || \
             [ "${{ needs.accessibility.result }}" == "failure" ] || \
             [ "${{ needs.performance.result }}" == "failure" ]; then
            echo "::error::E2E tests failed"
            exit 1
          fi
          echo "All E2E tests passed âœ…"
