#!/usr/bin/env node
/**
 * Schedule-based job scraping script
 * This script runs scheduled scraping operations without Slack notifications
 */

const path = require('path');
const { spawn } = require('child_process');

console.log('🚀 Starting scheduled job scraping...');

async function runScraping() {
  try {
    // Run the orchestrator for scheduled scraping
    const orchestratorPath = path.join(__dirname, '../automation/real-job-runner.cjs');
    
    return new Promise((resolve, reject) => {
      const child = spawn('node', [orchestratorPath, '--single-run'], {
        stdio: 'inherit',
        env: {
          ...process.env,
          JOBPING_PRODUCTION_MODE: 'true',
          NODE_ENV: 'production'
        }
      });

      child.on('close', (code) => {
        if (code === 0) {
          console.log('✅ Scheduled scraping completed successfully');
          resolve();
        } else {
          console.error(`❌ Scheduled scraping failed with code ${code}`);
          reject(new Error(`Process failed with code ${code}`));
        }
      });

      child.on('error', (error) => {
        console.error('❌ Failed to start scraping process:', error);
        reject(error);
      });
    });

  } catch (error) {
    console.error('❌ Error in scheduled scraping:', error);
    process.exit(1);
  }
}

// Run the scraping
runScraping().catch(error => {
  console.error('❌ Fatal error:', error);
  process.exit(1);
});
